{% comment %}
  NUSENSE TryON Button Snippet
  Use this for flexible placement with maximum control
  
  Usage:
  {% render 'nusense-tryon-button' %}
  
  Or with custom parameters:
  {% render 'nusense-tryon-button', 
     button_text: 'Try It On',
     button_style: 'outline',
     show_icon: true,
     button_icon: 'ðŸ‘•',
     button_width: 'full' %}
{% endcomment %}

{% assign button_text = button_text | default: 'Try Now' %}
{% assign button_style = button_style | default: 'primary' %}
{% assign show_icon = show_icon | default: true %}
{% assign button_icon = button_icon | default: 'âœ¨' %}
{% assign button_width = button_width | default: 'auto' %}

<div class="nusense-tryon-section">
  <button 
    id="nusense-tryon-btn" 
    class="nusense-tryon-button {{ button_style }}"
    style="{% if button_width == 'full' %}width: 100%;{% endif %}"
    aria-label="{{ button_text }}"
  >
    {% if show_icon %}
      <span class="nusense-tryon-icon">{{ button_icon }}</span>
    {% endif %}
    <span class="nusense-tryon-text">{{ button_text }}</span>
  </button>
</div>

<style>
  .nusense-tryon-section {
    margin: 10px 0;
  }
  
  .nusense-tryon-button {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
    font-size: 16px;
    transition: all 0.2s ease;
    font-family: inherit;
    text-decoration: none;
    text-align: center;
    min-height: 44px;
    box-sizing: border-box;
    white-space: nowrap;
  }
  
  .nusense-tryon-button:hover {
    transform: scale(1.02);
    opacity: 0.9;
  }
  
  .nusense-tryon-button:active {
    transform: scale(0.98);
  }
  
  .nusense-tryon-button:focus {
    outline: 2px solid var(--color-focus, #007acc);
    outline-offset: 2px;
  }
  
  .nusense-tryon-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
  }
  
  /* Primary style - matches theme primary button */
  .nusense-tryon-button.primary {
    background: var(--color-button, var(--color-primary, #000));
    color: var(--color-button-text, var(--color-primary-contrast, #fff));
    border: 1px solid var(--color-button, var(--color-primary, #000));
  }
  
  .nusense-tryon-button.primary:hover {
    background: var(--color-button-hover, var(--color-primary-hover, #333));
    border-color: var(--color-button-hover, var(--color-primary-hover, #333));
  }
  
  /* Secondary style - matches theme secondary button */
  .nusense-tryon-button.secondary {
    background: var(--color-button-secondary, var(--color-secondary, #f8f9fa));
    color: var(--color-button-secondary-text, var(--color-secondary-contrast, #333));
    border: 1px solid var(--color-button-secondary-border, var(--color-border, #ddd));
  }
  
  .nusense-tryon-button.secondary:hover {
    background: var(--color-button-secondary-hover, var(--color-secondary-hover, #e9ecef));
    border-color: var(--color-button-secondary-hover, var(--color-secondary-hover, #ccc));
  }
  
  /* Outline style - matches theme accent */
  .nusense-tryon-button.outline {
    background: transparent;
    color: var(--color-accent, var(--color-primary, #000));
    border: 2px solid var(--color-accent, var(--color-primary, #000));
  }
  
  .nusense-tryon-button.outline:hover {
    background: var(--color-accent, var(--color-primary, #000));
    color: var(--color-accent-contrast, var(--color-primary-contrast, #fff));
  }
  
  /* Minimal style - transparent with theme text color */
  .nusense-tryon-button.minimal {
    background: transparent;
    color: var(--color-text, #333);
    border: none;
    box-shadow: none;
  }
  
  .nusense-tryon-button.minimal:hover {
    background: var(--color-background-hover, rgba(0,0,0,0.05));
  }
  
  @media (max-width: 768px) {
    .nusense-tryon-button {
      width: 100%;
      justify-content: center;
      min-height: 48px;
    }
  }
</style>
